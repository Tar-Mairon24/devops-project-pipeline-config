#!/usr/bin/env groovy

node {
    def branch
    stage('checkout') {
        checkout scm
        branch = env.BRANCH_NAME
        echo "Checking out branch: ${branch}"
        sh 'ls -la'
    }
    stage('parameters') {
        env.GIT_COMMIT = sh(script: "git rev-parse HEAD", returnStdout: true).trim()
        env.GIT_COMMIT_MESSAGE = sh(script: "git log -1 --pretty=%B", returnStdout: true).trim()
        env.GIT_AUTHOR_NAME = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()
        env.GIT_AUTHOR_EMAIL = sh(script: "git log -1 --pretty=format:'%ae'", returnStdout: true).trim()
        env.GIT_Version = sh(script: "git --version", returnStdout: true).trim()
        echo "Branch name: ${branch}"
        echo "Git commit: ${env.GIT_COMMIT}"
        echo "Git commit message: ${env.GIT_COMMIT_MESSAGE}"
        echo "Git author email: ${env.GIT_AUTHOR_EMAIL}"
        echo "Git author name: ${env.GIT_AUTHOR_NAME}"
        echo "Workspace: ${env.WORKSPACE}"
        sh 'npm --version'
        sh 'node --version'
        sh 'docker --version'
        sh 'docker compose version'
    }
    // stage('Build backend image') {
    //     echo 'Building docker image...'
    //     if(branch == 'develop' || branch == 'main')
    //         dir('CN_api_bk') 

    //     }
    // }
    stage('Deploy backend develop') {
        if (branch == 'develop') {
            dockerDir = 'docker'
            dir(dockerDir) {
                sh 'ls -la'
                echo "Current directory: ${env.WORKSPACE}/${dockerDir}"
                echo "Building backend in directory: ${dockerDir}"
                sh 'docker compose -f backend.yml down'
                sh 'docker compose -f backend.yml build'
                sh 'docker compose -f backend.yml up -d'
            }
        } else {
                echo "Skipping backend deployment for branch: ${branch}"
            }
    }
    stage('Deploy') {
        echo 'Deploying....'
    }
}
